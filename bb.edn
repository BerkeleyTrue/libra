{:paths ["src" "resources"]
 :deps {org.clojars.askonomm/ruuter {:mvn/version "1.3.4"}
        com.github.seancorfield/honeysql {:mvn/version "2.6.1161"}
        com.github.seancorfield/next.jdbc {:mvn/version "1.3.939"}
        ring/ring {:mvn/version "1.12.1"}
        ring/ring-anti-forgery {:git/url "https://github.com/m3tti/ring-anti-forgery" :git/sha "4e226df604dca13d5c93be4d4900367a64f5963e"}
        gaka/gaka {:mvn/version "0.3.0"}
        squint/squint {:git/url "https://github.com/squint-cljs/squint" :git/sha "c86d83bd3741a710e2f80fecd413801ddd456e64"}
        lread/status-line {:git/url "https://github.com/lread/status-line.git"
                           :sha "cf44c15f30ea3867227fa61ceb823e5e942c707f"}
        com.taoensso/timbre {:mvn/version "6.5.0"}
        cheshire/cheshire {:mvn/version "5.13.0"}
        http-kit/http-kit {:mvn/version "2.8.0"}
        hiccup/hiccup {:mvn/version "2.0.0-RC3"}
        com.draines/postal {:mvn/version "2.0.5"}}

 :pods {org.babashka/go-sqlite3 {:version "0.2.7"}}
 :tasks
 {:requires ([clojure.string :as string]
             [babashka.fs :as fs]
             [babashka.cli :as cli]
             [babashka.nrepl.server :as srv]
             [lread.status-line :as status]
             [core])
  :init (def opts
          (merge (cli/parse-opts *command-line-args*)
                 {:out-dir "out"
                  :port 3000}))
  :enter (let [{:keys [name]} (current-task)] (status/line :head ">==<TASK %s>==> %s" name (string/join " " *command-line-args*)))
  :leave (let [{:keys [name]} (current-task)] (status/line :detail "\n>==<TASK %s>==> done." name))
  nrepl (do (srv/start-server! {:host "localhost"
                                :port (or (:nrepl-server opts) 1337)})
            (spit ".nrepl-port" (str (or (:nrepl-server opts) 1337)))
            (-> (Runtime/getRuntime)
                (.addShutdownHook (Thread. (fn [] (fs/delete ".nrepl-port")))))
            (deref (promise)))

  dev:server {:doc "Start development server."
              :task (run 'start-server)}

  -dev {:depends [dev:server nrepl]}

  dev {:doc "Start development server with file watching and live reload."
       :task (run '-dev {:parallel true})}}}
