{:paths ["src" "resources"]
 :deps {org.berkeleytrue/libra {:local/root "."}
        lread/status-line      {:git/url "https://github.com/lread/status-line.git"
                                :sha "cf44c15f30ea3867227fa61ceb823e5e942c707f"}}
 :pods {org.babashka/go-sqlite3 {:version "0.2.7"}}
 :tasks
 {:requires ([clojure.string :as string]
             [babashka.fs :as fs]
             [babashka.cli :as cli]
             [babashka.nrepl.server :as srv]
             [lread.status-line :as status])
  :init (def opts
          (merge (cli/parse-opts *command-line-args*)
                 {:out-dir "out"
                  :port 3000}))
  :enter (let [{:keys [name]} (current-task)] (status/line :head ">==<TASK %s>==> %s" name (string/join " " *command-line-args*)))
  :leave (let [{:keys [name]} (current-task)] (status/line :detail "\n>==<TASK %s>==> done." name))
  nrepl (do (srv/start-server! {:host "localhost"
                                :port (or (:nrepl-server opts) 1337)})
            (spit ".nrepl-port" (str (or (:nrepl-server opts) 1337)))
            (-> (Runtime/getRuntime)
                (.addShutdownHook (Thread. (fn [] (fs/delete ".nrepl-port")))))
            (deref (promise)))

  -dev {:depends [nrepl]}

  dev {:doc "Start development server with file watching and live reload."
       :extra-deps {integrant/repl  {:mvn/version "0.4.0"}
                    ring/ring-devel {:mvn/version "1.12.1"}}
       :extra-paths ["env/dev"]
       :task (run '-dev {:parallel true})}}}
